<div>
    <h1>Inicio</h1>
</div>

<div>
    <h2>Lista de Productos</h2>
    <ul id="ulList"></ul>
</div>

<script src="/socket.io/socket.io.js"></script>

<script>
    let data = [];
    
    async function fetchProducts() {
        try {
            const response = await fetch('/api/products');
            const result = await response.json();
            console.log('Datos recibidos:', result);
            if (Array.isArray(result)) {
                data = result;
            } else if (result.data && Array.isArray(result.data)) {
                data = result.data;
            } else {
                console.error('Los datos recibidos no son un array:', result);
                data = [];
            }
        } catch (error) {
            console.error('Error al obtener productos:', error);
        }
    }
   
    const url = '';
    const options = {};
    const user = {nickName: ''};

    const ulList = document.getElementById('ulList');

    const socketClient = io(url, options);

    socketClient.emit('init_message', 'desde realTimeProducts');

    socketClient.on('connect', async () => {
        console.log(`Conectando al servidor socket.io ${url}`);

        await fetchProducts();
        console.log('Datos procesados:', data);
        updateProductList(data);

        socketClient.emit('products_data', data);
    });

    // Función para actualizar la lista de productos en el DOM
    function updateProductList(products) {
        console.log('Tipo de products:', typeof products);
        console.log('Contenido de products:', products);
        
        ulList.innerHTML = '';
        
        if (!Array.isArray(products)) {
            console.error('updateProductList recibió datos no válidos:', products);
            ulList.innerHTML = '<li>Error: No se pudieron cargar los productos</li>';
            return;
        }
        
        if (products.length === 0) {
            ulList.innerHTML = '<li>No hay productos disponibles</li>';
            return;
        }
        
        products.forEach(product => {
            if (product && typeof product === 'object') {
                ulList.innerHTML += `<li><strong>${product.title || 'Sin título'}</strong> - $${product.price || 'Sin precio'}</li>`;
            } else {
                console.error('Producto no válido:', product);
            }
        });
    }

    // Escuchar actualizaciones de productos del servidor
    socketClient.on('update_products', (updatedProducts) => {
        data = updatedProducts;
        updateProductList(data);
    });
</script>
